"""create db

Revision ID: b7c384733957
Revises:
Create Date: 2023-05-09 23:23:09.981884

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "b7c384733957"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "date",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=64), nullable=True),
        sa.Column("password", sa.String(length=128), nullable=True),
        sa.Column("email", sa.String(length=50), nullable=True),
        sa.Column("telegram_id", sa.Integer(), nullable=True),
        sa.Column("active_date", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["active_date"],
            ["date.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_user_username"), ["username"], unique=True)

    op.create_table(
        "task_template",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("owner", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["owner"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reminder",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_template_id", sa.Integer(), nullable=False),
        sa.Column("reminder_time", sa.Time(), nullable=False),
        sa.ForeignKeyConstraint(["task_template_id"], ["task_template.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_template_id", sa.Integer(), nullable=False),
        sa.Column("date_id", sa.Integer(), nullable=False),
        sa.Column("is_done", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["date_id"], ["date.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["task_template_id"], ["task_template.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("task")
    op.drop_table("reminder")
    op.drop_table("task_template")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_username"))

    op.drop_table("user")
    op.drop_table("date")
    # ### end Alembic commands ###
